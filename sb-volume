#!/bin/sh

SPEAKER_ID="$(wpctl status | grep speaker | grep -oP '\d+(?=\.)' | head -1)"
if [ -z "$SPEAKER_ID" ]; then
	SPEAKER_ID="@DEFAULT_SINK@"
fi

show_volume_bar() {
	local vol=$1
	if [[ $vol == "muted" ]]; then
		dunstify -u low \
			-h string:x-dunst-stack-tag:volume \
			-h int:value:0 \
			"Main volume: $vol"
	else
		dunstify -u low \
			-h string:x-dunst-stack-tag:volume \
			-h int:value:$vol \
			"Main volume: $vol%"
	fi
}

get_vol() {
	volstr="$(wpctl get-volume $SPEAKER_ID)"
	if echo "$volstr" | grep -q '\[MUTED\]'; then
		vol="muted"
	else
		voldec="${volstr#Volume: }"
		vol="$(printf "%.0f" "$(echo "$voldec * 100" | bc)")"
	fi
}

refresh_dwmblocks() {
	pkill -RTMIN+7 dwmblocks
}

case $BLOCK_BUTTON in
1) wpctl set-mute $SPEAKER_ID toggle && get_vol && show_volume_bar "$vol" && refresh_dwmblocks ;;
3) pwvucontrol && refresh_dwmblocks ;;
4) wpctl set-volume $SPEAKER_ID 0.05+ && get_vol && show_volume_bar "$vol" && refresh_dwmblocks ;;
5) wpctl set-volume $SPEAKER_ID 0.05- && get_vol && show_volume_bar "$vol" && refresh_dwmblocks ;;
6) kitty --class floatkitty micro ~/suckless/dwmblocks/sb-scripts/sb-volume ;;
esac

# Get initial volume state
get_vol

# Display appropriate icon
if [ "$vol" = "muted" ]; then
	echo "[ 󰝟"
else
	case 1 in
	$((vol >= 70))) icon="󰕾" ;;
	$((vol >= 30))) icon="󰖀" ;;
	$((vol >= 1))) icon="󰕿" ;;
	*) icon="󰝟" ;;
	esac
	echo "[ $icon"
fi
